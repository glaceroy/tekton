apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: pipeline-build-push-gitops-deploy
spec:
  description: |
    this pipeline offers a typical CI/CD process, with a flow including:
    - fetching a git repository as the source
    - using buildah to build a Docker image by Dockerfile
    - pusing the built Docker image to a desired repository
    - deploying it to Kubernetes cluster
  
  # Parameters
  params:
  - name: repo-url
    type: string
    description: The git repository URL to clone from.
  - name: buildRevision
    type: string
    description: The revision of the build, i.e. the commit revision of the application repository.
  - name: python-file
    type: string
    description: The python file to lint
  - name: image-full-path-with-tag
    type: string
    description: The image full path to host the built image, with version tag, e.g. image-registry.openshift-image-registry.svc:5000/tekton-pipelines/spring-boot-docker:v1.0.0.
  - name: argocd-app-name
    type: string
    description: Name of the argocd application
  - name: configFile
    type: string
    description: Path to the gitops values file 
  - name: configGitUrl
    type: string
    description:  The git repository URL to clone from.

  # Workspaces
  workspaces:
  - name: workspace
  - name: empty-dir
  
  # Taksks
  tasks:

  # 1. Task - fetch-repository
  - name: fetch-code-repository
    taskRef:
      name: git-clone
    params:
    - name: url
      value: $(params.repo-url)
    - name: buildRevision
      value: $(params.buildRevision)
    - name: deleteExisting
      value: "true"
    workspaces:
    - name: output
      workspace: workspace

  # 2. Task - python tests - pylint
  - name: run-pylint-tests
    taskRef:
      name: pylint
    runAfter:
    - fetch-code-repository
    params:
      - name: path
        value: "$(params.python-file)"
    workspaces:
      - name: source
        workspace: workspace

  # 3. Task - buildah build & push image
  - name: build-and-push-image
    taskRef:
      name: buildah
    runAfter:
    - run-pylint-tests
    params:
      - name: IMAGE
        value: "$(params.image-full-path-with-tag)"
      - name: TLSVERIFY
        value: "false"
    workspaces:
      - name: source
        workspace: workspace

  # 4.  Task - gitops-repo-update
  - name: gitops-repo-update
    taskRef:
      name: gitops-repo-update
    runAfter:
    - build-and-push-image
    params:
    - name: argocd-app-name
      value: $(params.argocd-app-name)
    - name: configFile
      value: $(params.configFile)
    - name: configGitUrl
      value: $(params.configGitUrl)
    - name: image-full-path-with-tag
      value: $(params.image-full-path-with-tag)
    workspaces:
    - name: source
      workspace: workspace

  # 5.  Task - gitops-deploy
  - name: gitops-deploy
    taskRef:
      name: argocd-task-sync-and-wait
    runAfter:
    - gitops-repo-update
    params:
    - name: application-name
      value: $(params.argocd-app-name)

  